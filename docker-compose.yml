version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: dummy-app
    container_name: dummy_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - vendor:/var/www/vendor                    # Vendor in Docker volume
      - storage:/var/www/storage                  # Storage in Docker volume
      - bootstrap_cache:/var/www/bootstrap/cache  # Bootstrap cache in Docker volume
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./docker/config/resolv.conf:/etc/resolv.conf:ro  # Custom DNS config
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - dummy

  webserver:
    image: nginx:alpine
    container_name: dummy_webserver
    restart: unless-stopped
    ports:
      - "${WEBSERVER_PORT:-8080}:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx:/etc/nginx/conf.d
    networks:
      - dummy
    depends_on:
      - app

  db:
    image: postgres:16-alpine
    container_name: dummy_db
    restart: unless-stopped
    ports:
      - "${DB_PORT_EXTERNAL:-5433}:5432"
    environment:
      POSTGRES_DB: ${DB_DATABASE:-dummy}
      POSTGRES_USER: ${DB_USERNAME:-dummy}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-dummy}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - dummy

  queue:
    build:
      context: .
      dockerfile: Dockerfile
    image: dummy-app
    container_name: dummy_queue
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - vendor:/var/www/vendor                    # Share vendor volume
      - storage:/var/www/storage                  # Share storage volume
      - bootstrap_cache:/var/www/bootstrap/cache  # Share bootstrap cache volume
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./docker/config/resolv.conf:/etc/resolv.conf:ro  # Custom DNS config
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: sh -c "sleep 10 && /usr/local/bin/entrypoint.sh php artisan queue:work --verbose --tries=3 --timeout=90 --sleep=3 --max-jobs=1000 --max-time=3600"
    networks:
      - dummy
    depends_on:
      - db
      - app

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    image: dummy-app
    container_name: dummy_scheduler
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - vendor:/var/www/vendor                    # Share vendor volume
      - storage:/var/www/storage                  # Share storage volume
      - bootstrap_cache:/var/www/bootstrap/cache  # Share bootstrap cache volume
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./docker/config/resolv.conf:/etc/resolv.conf:ro  # Custom DNS config
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: sh -c "/usr/local/bin/entrypoint.sh sh -c 'while true; do php artisan schedule:run --verbose --no-interaction & sleep 60; done'"
    networks:
      - dummy
    depends_on:
      - db
      - app

networks:
  dummy:
    driver: bridge

volumes:
  dbdata:
    driver: local
  vendor:  # Named volume for composer dependencies
    driver: local
  storage:  # Named volume for storage (logs, uploads, etc)
    driver: local
  bootstrap_cache:  # Named volume for bootstrap cache
    driver: local